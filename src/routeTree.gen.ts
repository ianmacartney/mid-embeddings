/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DemoImport } from './routes/demo'
import { Route as IndexImport } from './routes/index'
import { Route as AuthorIndexImport } from './routes/author/index'
import { Route as AuthorNamespaceImport } from './routes/author/$namespace'

// Create Virtual Routes

const LoginLazyImport = createFileRoute('/login')()

// Create/Update Routes

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const DemoRoute = DemoImport.update({
  path: '/demo',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthorIndexRoute = AuthorIndexImport.update({
  path: '/author/',
  getParentRoute: () => rootRoute,
} as any)

const AuthorNamespaceRoute = AuthorNamespaceImport.update({
  path: '/author/$namespace',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/demo': {
      id: '/demo'
      path: '/demo'
      fullPath: '/demo'
      preLoaderRoute: typeof DemoImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/author/$namespace': {
      id: '/author/$namespace'
      path: '/author/$namespace'
      fullPath: '/author/$namespace'
      preLoaderRoute: typeof AuthorNamespaceImport
      parentRoute: typeof rootRoute
    }
    '/author/': {
      id: '/author/'
      path: '/author'
      fullPath: '/author'
      preLoaderRoute: typeof AuthorIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  DemoRoute,
  LoginLazyRoute,
  AuthorNamespaceRoute,
  AuthorIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/demo",
        "/login",
        "/author/$namespace",
        "/author/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/demo": {
      "filePath": "demo.tsx"
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/author/$namespace": {
      "filePath": "author/$namespace.tsx"
    },
    "/author/": {
      "filePath": "author/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
